"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**!
 * lightgallery.js | 1.0.1 | December 22nd 2016
 * http://sachinchoolur.github.io/lightgallery.js/
 * Copyright (c) 2016 Sachin N; 
 * @license GPLv3 
 */
!function (e) {
  if ("object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module) module.exports = e();else if ("function" == typeof define && define.amd) define([], e);else {
    var t;t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, t.Lightgallery = e();
  }
}(function () {
  var e, t, s;return function e(t, s, l) {
    function i(r, d) {
      if (!s[r]) {
        if (!t[r]) {
          var a = "function" == typeof require && require;if (!d && a) return a(r, !0);if (o) return o(r, !0);var n = new Error("Cannot find module '" + r + "'");throw n.code = "MODULE_NOT_FOUND", n;
        }var u = s[r] = { exports: {} };t[r][0].call(u.exports, function (e) {
          var s = t[r][1][e];return i(s ? s : e);
        }, u, u.exports, e, t, s, l);
      }return s[r].exports;
    }for (var o = "function" == typeof require && require, r = 0; r < l.length; r++) {
      i(l[r]);
    }return i;
  }({ 1: [function (t, s, l) {
      !function (t, s) {
        if ("function" == typeof e && e.amd) e(["exports"], s);else if ("undefined" != typeof l) s(l);else {
          var i = { exports: {} };s(i.exports), t.lgUtils = i.exports;
        }
      }(this, function (e) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), window.getAttribute = function (e) {
          return window[e];
        }, window.setAttribute = function (e, t) {
          window[e] = t;
        }, document.getAttribute = function (e) {
          return document[e];
        }, document.setAttribute = function (e, t) {
          document[e] = t;
        };var t = { wrap: function e(t, s) {
            if (t) {
              var l = document.createElement("div");l.className = s, t.parentNode.insertBefore(l, t), t.parentNode.removeChild(t), l.appendChild(t);
            }
          }, addClass: function e(t, s) {
            t && (t.classList ? t.classList.add(s) : t.className += " " + s);
          }, removeClass: function e(t, s) {
            t && (t.classList ? t.classList.remove(s) : t.className = t.className.replace(new RegExp("(^|\\b)" + s.split(" ").join("|") + "(\\b|$)", "gi"), " "));
          }, hasClass: function e(t, s) {
            return t.classList ? t.classList.contains(s) : new RegExp("(^| )" + s + "( |$)", "gi").test(t.className);
          }, setVendor: function e(t, s, l) {
            t && (t.style[s.charAt(0).toLowerCase() + s.slice(1)] = l, t.style["webkit" + s] = l, t.style["moz" + s] = l, t.style["ms" + s] = l, t.style["o" + s] = l);
          }, trigger: function e(t, s) {
            var l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;if (t) {
              var i = new CustomEvent(s, { detail: l });t.dispatchEvent(i);
            }
          }, Listener: { uid: 0 }, on: function e(s, l, i) {
            s && l.split(" ").forEach(function (e) {
              var l = s.getAttribute("lg-event-uid") || "";t.Listener.uid++, l += "&" + t.Listener.uid, s.setAttribute("lg-event-uid", l), t.Listener[e + t.Listener.uid] = i, s.addEventListener(e.split(".")[0], i, !1);
            });
          }, off: function e(s, l) {
            if (s) {
              var i = s.getAttribute("lg-event-uid");if (i) {
                i = i.split("&");for (var o = 0; o < i.length; o++) {
                  if (i[o]) {
                    var r = l + i[o];if ("." === r.substring(0, 1)) for (var d in t.Listener) {
                      t.Listener.hasOwnProperty(d) && d.split(".").indexOf(r.split(".")[1]) > -1 && (s.removeEventListener(d.split(".")[0], t.Listener[d]), s.setAttribute("lg-event-uid", s.getAttribute("lg-event-uid").replace("&" + i[o], "")), delete t.Listener[d]);
                    } else s.removeEventListener(r.split(".")[0], t.Listener[r]), s.setAttribute("lg-event-uid", s.getAttribute("lg-event-uid").replace("&" + i[o], "")), delete t.Listener[r];
                  }
                }
              }
            }
          }, param: function e(t) {
            return Object.keys(t).map(function (e) {
              return encodeURIComponent(e) + "=" + encodeURIComponent(t[e]);
            }).join("&");
          } };e.default = t;
      });
    }, {}], 2: [function (t, s, l) {
      !function (s, i) {
        if ("function" == typeof e && e.amd) e(["./lg-utils"], i);else if ("undefined" != typeof l) i(t("./lg-utils"));else {
          var o = { exports: {} };i(s.lgUtils), s.lightgallery = o.exports;
        }
      }(this, function (e) {
        "use strict";
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }function s(e, t) {
          if (this.el = e, this.s = i({}, o, t), this.s.dynamic && "undefined" !== this.s.dynamicEl && this.s.dynamicEl.constructor === Array && !this.s.dynamicEl.length) throw "When using dynamic mode, you must also define dynamicEl as an Array.";return this.modules = {}, this.lGalleryOn = !1, this.lgBusy = !1, this.hideBartimeout = !1, this.isTouch = "ontouchstart" in document.documentElement, this.s.slideEndAnimatoin && (this.s.hideControlOnEnd = !1), this.items = [], this.s.dynamic ? this.items = this.s.dynamicEl : "this" === this.s.selector ? this.items.push(this.el) : "" !== this.s.selector ? this.s.selectWithin ? this.items = document.querySelector(this.s.selectWithin).querySelectorAll(this.s.selector) : this.items = this.el.querySelectorAll(this.s.selector) : this.items = this.el.children, this.___slide = "", this.outer = "", this.init(), this;
        }var l = t(e),
            i = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var s = arguments[t];for (var l in s) {
              Object.prototype.hasOwnProperty.call(s, l) && (e[l] = s[l]);
            }
          }return e;
        };!function () {
          function e(e, t) {
            t = t || { bubbles: !1, cancelable: !1, detail: void 0 };var s = document.createEvent("CustomEvent");return s.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), s;
          }return "function" != typeof window.CustomEvent && (e.prototype = window.Event.prototype, void (window.CustomEvent = e));
        }(), window.utils = l.default, window.lgData = { uid: 0 }, window.lgModules = {};var o = { mode: "lg-slide", cssEasing: "ease", easing: "linear", speed: 600, height: "100%", width: "100%", addClass: "", startClass: "lg-start-zoom", backdropDuration: 150, hideBarsDelay: 6e3, useLeft: !1, closable: !0, loop: !0, escKey: !0, keyPress: !0, controls: !0, slideEndAnimatoin: !0, hideControlOnEnd: !1, mousewheel: !1, getCaptionFromTitleOrAlt: !0, appendSubHtmlTo: ".lg-sub-html", subHtmlSelectorRelative: !1, preload: 1, showAfterLoad: !0, selector: "", selectWithin: "", nextHtml: "", prevHtml: "", index: !1, iframeMaxWidth: "100%", download: !0, counter: !0, appendCounterTo: ".lg-toolbar", swipeThreshold: 50, enableSwipe: !0, enableDrag: !0, dynamic: !1, dynamicEl: [], galleryId: 1 };s.prototype.init = function () {
          var e = this;e.s.preload > e.items.length && (e.s.preload = e.items.length);var t = window.location.hash;if (t.indexOf("lg=" + this.s.galleryId) > 0 && (e.index = parseInt(t.split("&slide=")[1], 10), l.default.addClass(document.body, "lg-from-hash"), l.default.hasClass(document.body, "lg-on") || (l.default.addClass(document.body, "lg-on"), setTimeout(function () {
            e.build(e.index);
          }))), e.s.dynamic) l.default.trigger(this.el, "onBeforeOpen"), e.index = e.s.index || 0, l.default.hasClass(document.body, "lg-on") || (l.default.addClass(document.body, "lg-on"), setTimeout(function () {
            e.build(e.index);
          }));else for (var s = 0; s < e.items.length; s++) {
            !function (t) {
              l.default.on(e.items[t], "click.lgcustom", function (s) {
                s.preventDefault(), l.default.trigger(e.el, "onBeforeOpen"), e.index = e.s.index || t, l.default.hasClass(document.body, "lg-on") || (e.build(e.index), l.default.addClass(document.body, "lg-on"));
              });
            }(s);
          }
        }, s.prototype.build = function (e) {
          var t = this;t.structure();for (var s in window.lgModules) {
            t.modules[s] = new window.lgModules[s](t.el);
          }t.slide(e, !1, !1), t.s.keyPress && t.keyPress(), t.items.length > 1 && (t.arrow(), setTimeout(function () {
            t.enableDrag(), t.enableSwipe();
          }, 50), t.s.mousewheel && t.mousewheel()), t.counter(), t.closeGallery(), l.default.trigger(t.el, "onAfterOpen"), l.default.on(t.outer, "mousemove.lg click.lg touchstart.lg", function () {
            l.default.removeClass(t.outer, "lg-hide-items"), clearTimeout(t.hideBartimeout), t.hideBartimeout = setTimeout(function () {
              l.default.addClass(t.outer, "lg-hide-items");
            }, t.s.hideBarsDelay);
          });
        }, s.prototype.structure = function () {
          var e = "",
              t = "",
              s = 0,
              i = "",
              o,
              r = this;for (document.body.insertAdjacentHTML("beforeend", '<div class="lg-backdrop"></div>'), l.default.setVendor(document.querySelector(".lg-backdrop"), "TransitionDuration", this.s.backdropDuration + "ms"), s = 0; s < this.items.length; s++) {
            e += '<div class="lg-item"></div>';
          }if (this.s.controls && this.items.length > 1 && (t = '<div class="lg-actions"><div class="lg-prev lg-icon">' + this.s.prevHtml + '</div><div class="lg-next lg-icon">' + this.s.nextHtml + "</div></div>"), ".lg-sub-html" === this.s.appendSubHtmlTo && (i = '<div class="lg-sub-html"></div>'), o = '<div class="lg-outer ' + this.s.addClass + " " + this.s.startClass + '"><div class="lg" style="width:' + this.s.width + "; height:" + this.s.height + '"><div class="lg-inner">' + e + '</div><div class="lg-toolbar group"><span class="lg-close lg-icon"></span></div>' + t + i + "</div></div>", document.body.insertAdjacentHTML("beforeend", o), this.outer = document.querySelector(".lg-outer"), this.___slide = this.outer.querySelectorAll(".lg-item"), this.s.useLeft ? (l.default.addClass(this.outer, "lg-use-left"), this.s.mode = "lg-slide") : l.default.addClass(this.outer, "lg-use-css3"), r.setTop(), l.default.on(window, "resize.lg orientationchange.lg", function () {
            setTimeout(function () {
              r.setTop();
            }, 100);
          }), l.default.addClass(this.___slide[this.index], "lg-current"), this.doCss() ? l.default.addClass(this.outer, "lg-css3") : (l.default.addClass(this.outer, "lg-css"), this.s.speed = 0), l.default.addClass(this.outer, this.s.mode), this.s.enableDrag && this.items.length > 1 && l.default.addClass(this.outer, "lg-grab"), this.s.showAfterLoad && l.default.addClass(this.outer, "lg-show-after-load"), this.doCss()) {
            var d = this.outer.querySelector(".lg-inner");l.default.setVendor(d, "TransitionTimingFunction", this.s.cssEasing), l.default.setVendor(d, "TransitionDuration", this.s.speed + "ms");
          }setTimeout(function () {
            l.default.addClass(document.querySelector(".lg-backdrop"), "in");
          }), setTimeout(function () {
            l.default.addClass(r.outer, "lg-visible");
          }, this.s.backdropDuration), this.s.download && this.outer.querySelector(".lg-toolbar").insertAdjacentHTML("beforeend", '<a id="lg-download" target="_blank" download class="lg-download lg-icon"></a>'), this.prevScrollTop = document.documentElement.scrollTop || document.body.scrollTop;
        }, s.prototype.setTop = function () {
          if ("100%" !== this.s.height) {
            var e = window.innerHeight,
                t = (e - parseInt(this.s.height, 10)) / 2,
                s = this.outer.querySelector(".lg");e >= parseInt(this.s.height, 10) ? s.style.top = t + "px" : s.style.top = "0px";
          }
        }, s.prototype.doCss = function () {
          var e = function e() {
            var t = ["transition", "MozTransition", "WebkitTransition", "OTransition", "msTransition", "KhtmlTransition"],
                s = document.documentElement,
                l = 0;for (l = 0; l < t.length; l++) {
              if (t[l] in s.style) return !0;
            }
          };return !!e();
        }, s.prototype.isVideo = function (e, t) {
          if (!e) throw new Error("Make sure that slide " + t + " has an image/video src");var s;if (s = this.s.dynamic ? this.s.dynamicEl[t].html : this.items[t].getAttribute("data-html"), !e && s) return { html5: !0 };var l = e.match(/\/\/(?:www\.)?youtu(?:\.be|be\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)/i),
              i = e.match(/\/\/(?:www\.)?vimeo.com\/([0-9a-z\-_]+)/i),
              o = e.match(/\/\/(?:www\.)?dai.ly\/([0-9a-z\-_]+)/i),
              r = e.match(/\/\/(?:www\.)?(?:vk\.com|vkontakte\.ru)\/(?:video_ext\.php\?)(.*)/i);return l ? { youtube: l } : i ? { vimeo: i } : o ? { dailymotion: o } : r ? { vk: r } : void 0;
        }, s.prototype.counter = function () {
          this.s.counter && this.outer.querySelector(this.s.appendCounterTo).insertAdjacentHTML("beforeend", '<div id="lg-counter"><span id="lg-counter-current">' + (parseInt(this.index, 10) + 1) + '</span> / <span id="lg-counter-all">' + this.items.length + "</span></div>");
        }, s.prototype.addHtml = function (e) {
          var t = null,
              s;if (this.s.dynamic ? t = this.s.dynamicEl[e].subHtml : (s = this.items[e], t = s.getAttribute("data-sub-html"), this.s.getCaptionFromTitleOrAlt && !t && (t = s.getAttribute("title"), t && s.querySelector("img") && (t = s.querySelector("img").getAttribute("alt")))), "undefined" != typeof t && null !== t) {
            var i = t.substring(0, 1);"." !== i && "#" !== i || (t = this.s.subHtmlSelectorRelative && !this.s.dynamic ? s.querySelector(t).innerHTML : document.querySelector(t).innerHTML);
          } else t = "";".lg-sub-html" === this.s.appendSubHtmlTo ? this.outer.querySelector(this.s.appendSubHtmlTo).innerHTML = t : this.___slide[e].insertAdjacentHTML("beforeend", t), "undefined" != typeof t && null !== t && ("" === t ? l.default.addClass(this.outer.querySelector(this.s.appendSubHtmlTo), "lg-empty-html") : l.default.removeClass(this.outer.querySelector(this.s.appendSubHtmlTo), "lg-empty-html")), l.default.trigger(this.el, "onAfterAppendSubHtml", { index: e });
        }, s.prototype.preload = function (e) {
          var t = 1,
              s = 1;for (t = 1; t <= this.s.preload && !(t >= this.items.length - e); t++) {
            this.loadContent(e + t, !1, 0);
          }for (s = 1; s <= this.s.preload && !(e - s < 0); s++) {
            this.loadContent(e - s, !1, 0);
          }
        }, s.prototype.loadContent = function (e, t, s) {
          var i = this,
              o = !1,
              r,
              d,
              a,
              n,
              u,
              c,
              g = function e(t) {
            for (var s = [], l = [], i = 0; i < t.length; i++) {
              var o = t[i].split(" ");"" === o[0] && o.splice(0, 1), l.push(o[0]), s.push(o[1]);
            }for (var r = window.innerWidth, a = 0; a < s.length; a++) {
              if (parseInt(s[a], 10) > r) {
                d = l[a];break;
              }
            }
          };if (i.s.dynamic) {
            if (i.s.dynamicEl[e].poster && (o = !0, a = i.s.dynamicEl[e].poster), c = i.s.dynamicEl[e].html, d = i.s.dynamicEl[e].src, i.s.dynamicEl[e].responsive) {
              var f = i.s.dynamicEl[e].responsive.split(",");g(f);
            }n = i.s.dynamicEl[e].srcset, u = i.s.dynamicEl[e].sizes;
          } else {
            if (i.items[e].getAttribute("data-poster") && (o = !0, a = i.items[e].getAttribute("data-poster")), c = i.items[e].getAttribute("data-html"), d = i.items[e].getAttribute("href") || i.items[e].getAttribute("data-src"), i.items[e].getAttribute("data-responsive")) {
              var h = i.items[e].getAttribute("data-responsive").split(",");g(h);
            }n = i.items[e].getAttribute("data-srcset"), u = i.items[e].getAttribute("data-sizes");
          }var m = !1;i.s.dynamic ? i.s.dynamicEl[e].iframe && (m = !0) : "true" === i.items[e].getAttribute("data-iframe") && (m = !0);var p = i.isVideo(d, e);if (!l.default.hasClass(i.___slide[e], "lg-loaded")) {
            if (m) i.___slide[e].insertAdjacentHTML("afterbegin", '<div class="lg-video-cont" style="max-width:' + i.s.iframeMaxWidth + '"><div class="lg-video"><iframe class="lg-object" frameborder="0" src="' + d + '"  allowfullscreen="true"></iframe></div></div>');else if (o) {
              var v = "";v = p && p.youtube ? "lg-has-youtube" : p && p.vimeo ? "lg-has-vimeo" : "lg-has-html5", i.___slide[e].insertAdjacentHTML("beforeend", '<div class="lg-video-cont ' + v + ' "><div class="lg-video"><span class="lg-video-play"></span><img class="lg-object lg-has-poster" src="' + a + '" /></div></div>');
            } else p ? (i.___slide[e].insertAdjacentHTML("beforeend", '<div class="lg-video-cont "><div class="lg-video"></div></div>'), l.default.trigger(i.el, "hasVideo", { index: e, src: d, html: c })) : i.___slide[e].insertAdjacentHTML("beforeend", '<div class="lg-img-wrap"><img class="lg-object lg-image" src="' + d + '" /></div>');if (l.default.trigger(i.el, "onAferAppendSlide", { index: e }), r = i.___slide[e].querySelector(".lg-object"), u && r.setAttribute("sizes", u), n) {
              r.setAttribute("srcset", n);try {
                picturefill({ elements: [r[0]] });
              } catch (e) {
                console.error("Make sure you have included Picturefill version 2");
              }
            }".lg-sub-html" !== this.s.appendSubHtmlTo && i.addHtml(e), l.default.addClass(i.___slide[e], "lg-loaded");
          }l.default.on(i.___slide[e].querySelector(".lg-object"), "load.lg error.lg", function () {
            var t = 0;s && !l.default.hasClass(document.body, "lg-from-hash") && (t = s), setTimeout(function () {
              l.default.addClass(i.___slide[e], "lg-complete"), l.default.trigger(i.el, "onSlideItemLoad", { index: e, delay: s || 0 });
            }, t);
          }), p && p.html5 && !o && l.default.addClass(i.___slide[e], "lg-complete"), t === !0 && (l.default.hasClass(i.___slide[e], "lg-complete") ? i.preload(e) : l.default.on(i.___slide[e].querySelector(".lg-object"), "load.lg error.lg", function () {
            i.preload(e);
          }));
        }, s.prototype.slide = function (e, t, s) {
          for (var i = 0, o = 0; o < this.___slide.length; o++) {
            if (l.default.hasClass(this.___slide[o], "lg-current")) {
              i = o;break;
            }
          }var r = this;if (!r.lGalleryOn || i !== e) {
            var d = this.___slide.length,
                a = r.lGalleryOn ? this.s.speed : 0,
                n = !1,
                u = !1;if (!r.lgBusy) {
              if (this.s.download) {
                var c;c = r.s.dynamic ? r.s.dynamicEl[e].downloadUrl !== !1 && (r.s.dynamicEl[e].downloadUrl || r.s.dynamicEl[e].src) : "false" !== r.items[e].getAttribute("data-download-url") && (r.items[e].getAttribute("data-download-url") || r.items[e].getAttribute("href") || r.items[e].getAttribute("data-src")), c ? (document.getElementById("lg-download").setAttribute("href", c), l.default.removeClass(r.outer, "lg-hide-download")) : l.default.addClass(r.outer, "lg-hide-download");
              }if (l.default.trigger(r.el, "onBeforeSlide", { prevIndex: i, index: e, fromTouch: t, fromThumb: s }), r.lgBusy = !0, clearTimeout(r.hideBartimeout), ".lg-sub-html" === this.s.appendSubHtmlTo && setTimeout(function () {
                r.addHtml(e);
              }, a), this.arrowDisable(e), t) {
                var g = e - 1,
                    f = e + 1;0 === e && i === d - 1 ? (f = 0, g = d - 1) : e === d - 1 && 0 === i && (f = 0, g = d - 1), l.default.removeClass(r.outer.querySelector(".lg-prev-slide"), "lg-prev-slide"), l.default.removeClass(r.outer.querySelector(".lg-current"), "lg-current"), l.default.removeClass(r.outer.querySelector(".lg-next-slide"), "lg-next-slide"), l.default.addClass(r.___slide[g], "lg-prev-slide"), l.default.addClass(r.___slide[f], "lg-next-slide"), l.default.addClass(r.___slide[e], "lg-current");
              } else {
                l.default.addClass(r.outer, "lg-no-trans");for (var h = 0; h < this.___slide.length; h++) {
                  l.default.removeClass(this.___slide[h], "lg-prev-slide"), l.default.removeClass(this.___slide[h], "lg-next-slide");
                }e < i ? (u = !0, 0 !== e || i !== d - 1 || s || (u = !1, n = !0)) : e > i && (n = !0, e !== d - 1 || 0 !== i || s || (u = !0, n = !1)), u ? (l.default.addClass(this.___slide[e], "lg-prev-slide"), l.default.addClass(this.___slide[i], "lg-next-slide")) : n && (l.default.addClass(this.___slide[e], "lg-next-slide"), l.default.addClass(this.___slide[i], "lg-prev-slide")), setTimeout(function () {
                  l.default.removeClass(r.outer.querySelector(".lg-current"), "lg-current"), l.default.addClass(r.___slide[e], "lg-current"), l.default.removeClass(r.outer, "lg-no-trans");
                }, 50);
              }r.lGalleryOn ? (setTimeout(function () {
                r.loadContent(e, !0, 0);
              }, this.s.speed + 50), setTimeout(function () {
                r.lgBusy = !1, l.default.trigger(r.el, "onAfterSlide", { prevIndex: i, index: e, fromTouch: t, fromThumb: s });
              }, this.s.speed)) : (r.loadContent(e, !0, r.s.backdropDuration), r.lgBusy = !1, l.default.trigger(r.el, "onAfterSlide", { prevIndex: i, index: e, fromTouch: t, fromThumb: s })), r.lGalleryOn = !0, this.s.counter && document.getElementById("lg-counter-current") && (document.getElementById("lg-counter-current").innerHTML = e + 1);
            }
          }
        }, s.prototype.goToNextSlide = function (e) {
          var t = this;t.lgBusy || (t.index + 1 < t.___slide.length ? (t.index++, l.default.trigger(t.el, "onBeforeNextSlide", { index: t.index }), t.slide(t.index, e, !1)) : t.s.loop ? (t.index = 0, l.default.trigger(t.el, "onBeforeNextSlide", { index: t.index }), t.slide(t.index, e, !1)) : t.s.slideEndAnimatoin && (l.default.addClass(t.outer, "lg-right-end"), setTimeout(function () {
            l.default.removeClass(t.outer, "lg-right-end");
          }, 400)));
        }, s.prototype.goToPrevSlide = function (e) {
          var t = this;t.lgBusy || (t.index > 0 ? (t.index--, l.default.trigger(t.el, "onBeforePrevSlide", { index: t.index, fromTouch: e }), t.slide(t.index, e, !1)) : t.s.loop ? (t.index = t.items.length - 1, l.default.trigger(t.el, "onBeforePrevSlide", { index: t.index, fromTouch: e }), t.slide(t.index, e, !1)) : t.s.slideEndAnimatoin && (l.default.addClass(t.outer, "lg-left-end"), setTimeout(function () {
            l.default.removeClass(t.outer, "lg-left-end");
          }, 400)));
        }, s.prototype.keyPress = function () {
          var e = this;this.items.length > 1 && l.default.on(window, "keyup.lg", function (t) {
            e.items.length > 1 && (37 === t.keyCode && (t.preventDefault(), e.goToPrevSlide()), 39 === t.keyCode && (t.preventDefault(), e.goToNextSlide()));
          }), l.default.on(window, "keydown.lg", function (t) {
            e.s.escKey === !0 && 27 === t.keyCode && (t.preventDefault(), l.default.hasClass(e.outer, "lg-thumb-open") ? l.default.removeClass(e.outer, "lg-thumb-open") : e.destroy());
          });
        }, s.prototype.arrow = function () {
          var e = this;l.default.on(this.outer.querySelector(".lg-prev"), "click.lg", function () {
            e.goToPrevSlide();
          }), l.default.on(this.outer.querySelector(".lg-next"), "click.lg", function () {
            e.goToNextSlide();
          });
        }, s.prototype.arrowDisable = function (e) {
          if (!this.s.loop && this.s.hideControlOnEnd) {
            var t = this.outer.querySelector(".lg-next"),
                s = this.outer.querySelector(".lg-prev");e + 1 < this.___slide.length ? (t.removeAttribute("disabled"), l.default.removeClass(t, "disabled")) : (t.setAttribute("disabled", "disabled"), l.default.addClass(t, "disabled")), e > 0 ? (s.removeAttribute("disabled"), l.default.removeClass(s, "disabled")) : (t.setAttribute("disabled", "disabled"), l.default.addClass(t, "disabled"));
          }
        }, s.prototype.setTranslate = function (e, t, s) {
          this.s.useLeft ? e.style.left = t : l.default.setVendor(e, "Transform", "translate3d(" + t + "px, " + s + "px, 0px)");
        }, s.prototype.touchMove = function (e, t) {
          var s = t - e;Math.abs(s) > 15 && (l.default.addClass(this.outer, "lg-dragging"), this.setTranslate(this.___slide[this.index], s, 0), this.setTranslate(document.querySelector(".lg-prev-slide"), -this.___slide[this.index].clientWidth + s, 0), this.setTranslate(document.querySelector(".lg-next-slide"), this.___slide[this.index].clientWidth + s, 0));
        }, s.prototype.touchEnd = function (e) {
          var t = this;"lg-slide" !== t.s.mode && l.default.addClass(t.outer, "lg-slide");for (var s = 0; s < this.___slide.length; s++) {
            l.default.hasClass(this.___slide[s], "lg-current") || l.default.hasClass(this.___slide[s], "lg-prev-slide") || l.default.hasClass(this.___slide[s], "lg-next-slide") || (this.___slide[s].style.opacity = "0");
          }setTimeout(function () {
            l.default.removeClass(t.outer, "lg-dragging"), e < 0 && Math.abs(e) > t.s.swipeThreshold ? t.goToNextSlide(!0) : e > 0 && Math.abs(e) > t.s.swipeThreshold ? t.goToPrevSlide(!0) : Math.abs(e) < 5 && l.default.trigger(t.el, "onSlideClick");for (var s = 0; s < t.___slide.length; s++) {
              t.___slide[s].removeAttribute("style");
            }
          }), setTimeout(function () {
            l.default.hasClass(t.outer, "lg-dragging") || "lg-slide" === t.s.mode || l.default.removeClass(t.outer, "lg-slide");
          }, t.s.speed + 100);
        }, s.prototype.enableSwipe = function () {
          var e = this,
              t = 0,
              s = 0,
              i = !1;if (e.s.enableSwipe && e.isTouch && e.doCss()) {
            for (var o = 0; o < e.___slide.length; o++) {
              l.default.on(e.___slide[o], "touchstart.lg", function (s) {
                l.default.hasClass(e.outer, "lg-zoomed") || e.lgBusy || (s.preventDefault(), e.manageSwipeClass(), t = s.targetTouches[0].pageX);
              });
            }for (var r = 0; r < e.___slide.length; r++) {
              l.default.on(e.___slide[r], "touchmove.lg", function (o) {
                l.default.hasClass(e.outer, "lg-zoomed") || (o.preventDefault(), s = o.targetTouches[0].pageX, e.touchMove(t, s), i = !0);
              });
            }for (var d = 0; d < e.___slide.length; d++) {
              l.default.on(e.___slide[d], "touchend.lg", function () {
                l.default.hasClass(e.outer, "lg-zoomed") || (i ? (i = !1, e.touchEnd(s - t)) : l.default.trigger(e.el, "onSlideClick"));
              });
            }
          }
        }, s.prototype.enableDrag = function () {
          var e = this,
              t = 0,
              s = 0,
              i = !1,
              o = !1;if (e.s.enableDrag && !e.isTouch && e.doCss()) {
            for (var r = 0; r < e.___slide.length; r++) {
              l.default.on(e.___slide[r], "mousedown.lg", function (s) {
                l.default.hasClass(e.outer, "lg-zoomed") || (l.default.hasClass(s.target, "lg-object") || l.default.hasClass(s.target, "lg-video-play")) && (s.preventDefault(), e.lgBusy || (e.manageSwipeClass(), t = s.pageX, i = !0, e.outer.scrollLeft += 1, e.outer.scrollLeft -= 1, l.default.removeClass(e.outer, "lg-grab"), l.default.addClass(e.outer, "lg-grabbing"), l.default.trigger(e.el, "onDragstart")));
              });
            }l.default.on(window, "mousemove.lg", function (r) {
              i && (o = !0, s = r.pageX, e.touchMove(t, s), l.default.trigger(e.el, "onDragmove"));
            }), l.default.on(window, "mouseup.lg", function (r) {
              o ? (o = !1, e.touchEnd(s - t), l.default.trigger(e.el, "onDragend")) : (l.default.hasClass(r.target, "lg-object") || l.default.hasClass(r.target, "lg-video-play")) && l.default.trigger(e.el, "onSlideClick"), i && (i = !1, l.default.removeClass(e.outer, "lg-grabbing"), l.default.addClass(e.outer, "lg-grab"));
            });
          }
        }, s.prototype.manageSwipeClass = function () {
          var e = this.index + 1,
              t = this.index - 1,
              s = this.___slide.length;this.s.loop && (0 === this.index ? t = s - 1 : this.index === s - 1 && (e = 0));for (var i = 0; i < this.___slide.length; i++) {
            l.default.removeClass(this.___slide[i], "lg-next-slide"), l.default.removeClass(this.___slide[i], "lg-prev-slide");
          }t > -1 && l.default.addClass(this.___slide[t], "lg-prev-slide"), l.default.addClass(this.___slide[e], "lg-next-slide");
        }, s.prototype.mousewheel = function () {
          var e = this;l.default.on(e.outer, "mousewheel.lg", function (t) {
            t.deltaY && (t.deltaY > 0 ? e.goToPrevSlide() : e.goToNextSlide(), t.preventDefault());
          });
        }, s.prototype.closeGallery = function () {
          var e = this,
              t = !1;l.default.on(this.outer.querySelector(".lg-close"), "click.lg", function () {
            e.destroy();
          }), e.s.closable && (l.default.on(e.outer, "mousedown.lg", function (e) {
            t = !!(l.default.hasClass(e.target, "lg-outer") || l.default.hasClass(e.target, "lg-item") || l.default.hasClass(e.target, "lg-img-wrap"));
          }), l.default.on(e.outer, "mouseup.lg", function (s) {
            (l.default.hasClass(s.target, "lg-outer") || l.default.hasClass(s.target, "lg-item") || l.default.hasClass(s.target, "lg-img-wrap") && t) && (l.default.hasClass(e.outer, "lg-dragging") || e.destroy());
          }));
        }, s.prototype.destroy = function (e) {
          var t = this;if (e || l.default.trigger(t.el, "onBeforeClose"), document.body.scrollTop = t.prevScrollTop, document.documentElement.scrollTop = t.prevScrollTop, e) {
            if (!t.s.dynamic) for (var s = 0; s < this.items.length; s++) {
              l.default.off(this.items[s], ".lg"), l.default.off(this.items[s], ".lgcustom");
            }var i = t.el.getAttribute("lg-uid");delete window.lgData[i], t.el.removeAttribute("lg-uid");
          }l.default.off(this.el, ".lgtm");for (var o in window.lgModules) {
            t.modules[o] && t.modules[o].destroy();
          }this.lGalleryOn = !1, clearTimeout(t.hideBartimeout), this.hideBartimeout = !1, l.default.off(window, ".lg"), l.default.removeClass(document.body, "lg-on"), l.default.removeClass(document.body, "lg-from-hash"), t.outer && l.default.removeClass(t.outer, "lg-visible"), l.default.removeClass(document.querySelector(".lg-backdrop"), "in"), setTimeout(function () {
            try {
              t.outer && t.outer.parentNode.removeChild(t.outer), document.querySelector(".lg-backdrop") && document.querySelector(".lg-backdrop").parentNode.removeChild(document.querySelector(".lg-backdrop")), e || l.default.trigger(t.el, "onCloseAfter");
            } catch (e) {}
          }, t.s.backdropDuration + 50);
        }, window.lightGallery = function (e, t) {
          if (e) try {
            if (e.getAttribute("lg-uid")) try {
              window.lgData[e.getAttribute("lg-uid")].init();
            } catch (e) {
              console.error("lightGallery has not initiated properly");
            } else {
              var l = "lg" + window.lgData.uid++;window.lgData[l] = new s(e, t), e.setAttribute("lg-uid", l);
            }
          } catch (e) {
            console.error("lightGallery has not initiated properly");
          }
        };
      });
    }, { "./lg-utils": 1 }] }, {}, [2])(2);
});
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**!
 * lg-thumbnail.js | 1.0.0 | October 5th 2016
 * http://sachinchoolur.github.io/lg-thumbnail.js
 * Copyright (c) 2016 Sachin N; 
 * @license GPLv3 
 */
!function (t) {
  if ("object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module) module.exports = t();else if ("function" == typeof define && define.amd) define([], t);else {
    var e;e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, e.LgThumbnail = t();
  }
}(function () {
  var t, e, i;return function t(e, i, o) {
    function u(s, l) {
      if (!i[s]) {
        if (!e[s]) {
          var h = "function" == typeof require && require;if (!l && h) return h(s, !0);if (r) return r(s, !0);var n = new Error("Cannot find module '" + s + "'");throw n.code = "MODULE_NOT_FOUND", n;
        }var a = i[s] = { exports: {} };e[s][0].call(a.exports, function (t) {
          var i = e[s][1][t];return u(i ? i : t);
        }, a, a.exports, t, e, i, o);
      }return i[s].exports;
    }for (var r = "function" == typeof require && require, s = 0; s < o.length; s++) {
      u(o[s]);
    }return u;
  }({ 1: [function (e, i, o) {
      !function (e, i) {
        if ("function" == typeof t && t.amd) t([], i);else if ("undefined" != typeof o) i();else {
          var u = { exports: {} };i(), e.lgThumbnail = u.exports;
        }
      }(this, function () {
        "use strict";
        var t = Object.assign || function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var i = arguments[e];for (var o in i) {
              Object.prototype.hasOwnProperty.call(i, o) && (t[o] = i[o]);
            }
          }return t;
        },
            e = { thumbnail: !0, animateThumb: !0, currentPagerPosition: "middle", thumbWidth: 100, thumbContHeight: 100, thumbMargin: 5, exThumbImage: !1, showThumbByDefault: !0, toggleThumb: !0, pullCaptionUp: !0, enableThumbDrag: !0, enableThumbSwipe: !0, swipeThreshold: 50, loadYoutubeThumbnail: !0, youtubeThumbSize: 1, loadVimeoThumbnail: !0, vimeoThumbSize: "thumbnail_small", loadDailymotionThumbnail: !0 },
            i = function i(o) {
          return this.el = o, this.core = window.lgData[this.el.getAttribute("lg-uid")], this.core.s = t({}, e, this.core.s), this.thumbOuter = null, this.thumbOuterWidth = 0, this.thumbTotalWidth = this.core.items.length * (this.core.s.thumbWidth + this.core.s.thumbMargin), this.thumbIndex = this.core.index, this.left = 0, this.init(), this;
        };i.prototype.init = function () {
          var t = this;this.core.s.thumbnail && this.core.items.length > 1 && (this.core.s.showThumbByDefault && setTimeout(function () {
            utils.addClass(t.core.outer, "lg-thumb-open");
          }, 700), this.core.s.pullCaptionUp && utils.addClass(this.core.outer, "lg-pull-caption-up"), this.build(), this.core.s.animateThumb ? (this.core.s.enableThumbDrag && !this.core.isTouch && this.core.doCss() && this.enableThumbDrag(), this.core.s.enableThumbSwipe && this.core.isTouch && this.core.doCss() && this.enableThumbSwipe(), this.thumbClickable = !1) : this.thumbClickable = !0, this.toggle(), this.thumbkeyPress());
        }, i.prototype.build = function () {
          function t(t, u, r) {
            var s = e.core.isVideo(t, r) || {},
                l,
                h = "";s.youtube || s.vimeo || s.dailymotion ? s.youtube ? l = e.core.s.loadYoutubeThumbnail ? "//img.youtube.com/vi/" + s.youtube[1] + "/" + e.core.s.youtubeThumbSize + ".jpg" : u : s.vimeo ? e.core.s.loadVimeoThumbnail ? (l = "//i.vimeocdn.com/video/error_" + o + ".jpg", h = s.vimeo[1]) : l = u : s.dailymotion && (l = e.core.s.loadDailymotionThumbnail ? "//www.dailymotion.com/thumbnail/video/" + s.dailymotion[1] : u) : l = u, i += '<div data-vimeo-id="' + h + '" class="lg-thumb-item" style="width:' + e.core.s.thumbWidth + "px; margin-right: " + e.core.s.thumbMargin + 'px"><img src="' + l + '" /></div>', h = "";
          }var e = this,
              i = "",
              o = "",
              u,
              r = '<div class="lg-thumb-outer"><div class="lg-thumb group"></div></div>';switch (this.core.s.vimeoThumbSize) {case "thumbnail_large":
              o = "640";break;case "thumbnail_medium":
              o = "200x150";break;case "thumbnail_small":
              o = "100x75";}if (utils.addClass(e.core.outer, "lg-has-thumb"), e.core.outer.querySelector(".lg").insertAdjacentHTML("beforeend", r), e.thumbOuter = e.core.outer.querySelector(".lg-thumb-outer"), e.thumbOuterWidth = e.thumbOuter.offsetWidth, e.core.s.animateThumb && (e.core.outer.querySelector(".lg-thumb").style.width = e.thumbTotalWidth + "px", e.core.outer.querySelector(".lg-thumb").style.position = "relative"), this.core.s.animateThumb && (e.thumbOuter.style.height = e.core.s.thumbContHeight + "px"), e.core.s.dynamic) for (var s = 0; s < e.core.s.dynamicEl.length; s++) {
            t(e.core.s.dynamicEl[s].src, e.core.s.dynamicEl[s].thumb, s);
          } else for (var l = 0; l < e.core.items.length; l++) {
            e.core.s.exThumbImage ? t(e.core.items[l].getAttribute("href") || e.core.items[l].getAttribute("data-src"), e.core.items[l].getAttribute(e.core.s.exThumbImage), l) : t(e.core.items[l].getAttribute("href") || e.core.items[l].getAttribute("data-src"), e.core.items[l].querySelector("img").getAttribute("src"), l);
          }e.core.outer.querySelector(".lg-thumb").innerHTML = i, u = e.core.outer.querySelectorAll(".lg-thumb-item");for (var h = 0; h < u.length; h++) {
            !function (t) {
              var i = u[t],
                  o = i.getAttribute("data-vimeo-id");if (o) {
                window["lgJsonP" + e.el.getAttribute("lg-uid") + h] = function (t) {
                  i.querySelector("img").setAttribute("src", t[0][e.core.s.vimeoThumbSize]);
                };var r = document.createElement("script");r.className = "lg-script", r.src = "//www.vimeo.com/api/v2/video/" + o + ".json?callback=lgJsonP" + e.el.getAttribute("lg-uid") + h, document.body.appendChild(r);
              }
            }(h);
          }utils.addClass(u[e.core.index], "active"), utils.on(e.core.el, "onBeforeSlide.lgtm", function () {
            for (var t = 0; t < u.length; t++) {
              utils.removeClass(u[t], "active");
            }utils.addClass(u[e.core.index], "active");
          });for (var n = 0; n < u.length; n++) {
            !function (t) {
              utils.on(u[t], "click.lg touchend.lg", function () {
                setTimeout(function () {
                  (e.thumbClickable && !e.core.lgBusy || !e.core.doCss()) && (e.core.index = t, e.core.slide(e.core.index, !1, !0));
                }, 50);
              });
            }(n);
          }utils.on(e.core.el, "onBeforeSlide.lgtm", function () {
            e.animateThumb(e.core.index);
          }), utils.on(window, "resize.lgthumb orientationchange.lgthumb", function () {
            setTimeout(function () {
              e.animateThumb(e.core.index), e.thumbOuterWidth = e.thumbOuter.offsetWidth;
            }, 200);
          });
        }, i.prototype.setTranslate = function (t) {
          utils.setVendor(this.core.outer.querySelector(".lg-thumb"), "Transform", "translate3d(-" + t + "px, 0px, 0px)");
        }, i.prototype.animateThumb = function (t) {
          var e = this.core.outer.querySelector(".lg-thumb");if (this.core.s.animateThumb) {
            var i;switch (this.core.s.currentPagerPosition) {case "left":
                i = 0;break;case "middle":
                i = this.thumbOuterWidth / 2 - this.core.s.thumbWidth / 2;break;case "right":
                i = this.thumbOuterWidth - this.core.s.thumbWidth;}this.left = (this.core.s.thumbWidth + this.core.s.thumbMargin) * t - 1 - i, this.left > this.thumbTotalWidth - this.thumbOuterWidth && (this.left = this.thumbTotalWidth - this.thumbOuterWidth), this.left < 0 && (this.left = 0), this.core.lGalleryOn ? (utils.hasClass(e, "on") || utils.setVendor(this.core.outer.querySelector(".lg-thumb"), "TransitionDuration", this.core.s.speed + "ms"), this.core.doCss() || (e.style.left = -this.left + "px")) : this.core.doCss() || (e.style.left = -this.left + "px"), this.setTranslate(this.left);
          }
        }, i.prototype.enableThumbDrag = function () {
          var t = this,
              e = 0,
              i = 0,
              o = !1,
              u = !1,
              r = 0;utils.addClass(t.thumbOuter, "lg-grab"), utils.on(t.core.outer.querySelector(".lg-thumb"), "mousedown.lgthumb", function (i) {
            t.thumbTotalWidth > t.thumbOuterWidth && (i.preventDefault(), e = i.pageX, o = !0, t.core.outer.scrollLeft += 1, t.core.outer.scrollLeft -= 1, t.thumbClickable = !1, utils.removeClass(t.thumbOuter, "lg-grab"), utils.addClass(t.thumbOuter, "lg-grabbing"));
          }), utils.on(window, "mousemove.lgthumb", function (s) {
            o && (r = t.left, u = !0, i = s.pageX, utils.addClass(t.thumbOuter, "lg-dragging"), r -= i - e, r > t.thumbTotalWidth - t.thumbOuterWidth && (r = t.thumbTotalWidth - t.thumbOuterWidth), r < 0 && (r = 0), t.setTranslate(r));
          }), utils.on(window, "mouseup.lgthumb", function () {
            u ? (u = !1, utils.removeClass(t.thumbOuter, "lg-dragging"), t.left = r, Math.abs(i - e) < t.core.s.swipeThreshold && (t.thumbClickable = !0)) : t.thumbClickable = !0, o && (o = !1, utils.removeClass(t.thumbOuter, "lg-grabbing"), utils.addClass(t.thumbOuter, "lg-grab"));
          });
        }, i.prototype.enableThumbSwipe = function () {
          var t = this,
              e = 0,
              i = 0,
              o = !1,
              u = 0;utils.on(t.core.outer.querySelector(".lg-thumb"), "touchstart.lg", function (i) {
            t.thumbTotalWidth > t.thumbOuterWidth && (i.preventDefault(), e = i.targetTouches[0].pageX, t.thumbClickable = !1);
          }), utils.on(t.core.outer.querySelector(".lg-thumb"), "touchmove.lg", function (r) {
            t.thumbTotalWidth > t.thumbOuterWidth && (r.preventDefault(), i = r.targetTouches[0].pageX, o = !0, utils.addClass(t.thumbOuter, "lg-dragging"), u = t.left, u -= i - e, u > t.thumbTotalWidth - t.thumbOuterWidth && (u = t.thumbTotalWidth - t.thumbOuterWidth), u < 0 && (u = 0), t.setTranslate(u));
          }), utils.on(t.core.outer.querySelector(".lg-thumb"), "touchend.lg", function () {
            t.thumbTotalWidth > t.thumbOuterWidth && o ? (o = !1, utils.removeClass(t.thumbOuter, "lg-dragging"), Math.abs(i - e) < t.core.s.swipeThreshold && (t.thumbClickable = !0), t.left = u) : t.thumbClickable = !0;
          });
        }, i.prototype.toggle = function () {
          var t = this;t.core.s.toggleThumb && (utils.addClass(t.core.outer, "lg-can-toggle"), t.thumbOuter.insertAdjacentHTML("beforeend", '<span class="lg-toggle-thumb lg-icon"></span>'), utils.on(t.core.outer.querySelector(".lg-toggle-thumb"), "click.lg", function () {
            utils.hasClass(t.core.outer, "lg-thumb-open") ? utils.removeClass(t.core.outer, "lg-thumb-open") : utils.addClass(t.core.outer, "lg-thumb-open");
          }));
        }, i.prototype.thumbkeyPress = function () {
          var t = this;utils.on(window, "keydown.lgthumb", function (e) {
            38 === e.keyCode ? (e.preventDefault(), utils.addClass(t.core.outer, "lg-thumb-open")) : 40 === e.keyCode && (e.preventDefault(), utils.removeClass(t.core.outer, "lg-thumb-open"));
          });
        }, i.prototype.destroy = function () {
          if (this.core.s.thumbnail && this.core.items.length > 1) {
            utils.off(window, ".lgthumb"), this.thumbOuter.parentNode.removeChild(this.thumbOuter), utils.removeClass(this.core.outer, "lg-has-thumb");for (var t = document.getElementsByClassName("lg-script"); t[0];) {
              t[0].parentNode.removeChild(t[0]);
            }
          }
        }, window.lgModules.thumbnail = i;
      });
    }, {}] }, {}, [1])(1);
});
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * smoothscroll polyfill - v0.3.5
 * https://iamdustan.github.io/smoothscroll
 * 2016 (c) Dustan Kasten, Jeremias Menichelli - MIT License
 */

(function (w, d, undefined) {
  'use strict';

  /*
   * aliases
   * w: window global object
   * d: document
   * undefined: undefined
   */

  // polyfill

  function polyfill() {
    // return when scrollBehavior interface is supported
    if ('scrollBehavior' in d.documentElement.style) {
      return;
    }

    /*
     * globals
     */
    var Element = w.HTMLElement || w.Element;
    var SCROLL_TIME = 468;

    /*
     * object gathering original scroll methods
     */
    var original = {
      scroll: w.scroll || w.scrollTo,
      scrollBy: w.scrollBy,
      elScroll: Element.prototype.scroll || scrollElement,
      scrollIntoView: Element.prototype.scrollIntoView
    };

    /*
     * define timing method
     */
    var now = w.performance && w.performance.now ? w.performance.now.bind(w.performance) : Date.now;

    /**
     * changes scroll position inside an element
     * @method scrollElement
     * @param {Number} x
     * @param {Number} y
     */
    function scrollElement(x, y) {
      this.scrollLeft = x;
      this.scrollTop = y;
    }

    /**
     * returns result of applying ease math function to a number
     * @method ease
     * @param {Number} k
     * @returns {Number}
     */
    function ease(k) {
      return 0.5 * (1 - Math.cos(Math.PI * k));
    }

    /**
     * indicates if a smooth behavior should be applied
     * @method shouldBailOut
     * @param {Number|Object} x
     * @returns {Boolean}
     */
    function shouldBailOut(x) {
      if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object' || x === null || x.behavior === undefined || x.behavior === 'auto' || x.behavior === 'instant') {
        // first arg not an object/null
        // or behavior is auto, instant or undefined
        return true;
      }

      if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x.behavior === 'smooth') {
        // first argument is an object and behavior is smooth
        return false;
      }

      // throw error when behavior is not supported
      throw new TypeError('behavior not valid');
    }

    /**
     * finds scrollable parent of an element
     * @method findScrollableParent
     * @param {Node} el
     * @returns {Node} el
     */
    function findScrollableParent(el) {
      var isBody;
      var hasScrollableSpace;
      var hasVisibleOverflow;

      do {
        el = el.parentNode;

        // set condition variables
        isBody = el === d.body;
        hasScrollableSpace = el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth;
        hasVisibleOverflow = w.getComputedStyle(el, null).overflow === 'visible';
      } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));

      isBody = hasScrollableSpace = hasVisibleOverflow = null;

      return el;
    }

    /**
     * self invoked function that, given a context, steps through scrolling
     * @method step
     * @param {Object} context
     */
    function step(context) {
      var time = now();
      var value;
      var currentX;
      var currentY;
      var elapsed = (time - context.startTime) / SCROLL_TIME;

      // avoid elapsed times higher than one
      elapsed = elapsed > 1 ? 1 : elapsed;

      // apply easing to elapsed time
      value = ease(elapsed);

      currentX = context.startX + (context.x - context.startX) * value;
      currentY = context.startY + (context.y - context.startY) * value;

      context.method.call(context.scrollable, currentX, currentY);

      // scroll more if we have not reached our destination
      if (currentX !== context.x || currentY !== context.y) {
        w.requestAnimationFrame(step.bind(w, context));
      }
    }

    /**
     * scrolls window with a smooth behavior
     * @method smoothScroll
     * @param {Object|Node} el
     * @param {Number} x
     * @param {Number} y
     */
    function smoothScroll(el, x, y) {
      var scrollable;
      var startX;
      var startY;
      var method;
      var startTime = now();

      // define scroll context
      if (el === d.body) {
        scrollable = w;
        startX = w.scrollX || w.pageXOffset;
        startY = w.scrollY || w.pageYOffset;
        method = original.scroll;
      } else {
        scrollable = el;
        startX = el.scrollLeft;
        startY = el.scrollTop;
        method = scrollElement;
      }

      // scroll looping over a frame
      step({
        scrollable: scrollable,
        method: method,
        startTime: startTime,
        startX: startX,
        startY: startY,
        x: x,
        y: y
      });
    }

    /*
     * ORIGINAL METHODS OVERRIDES
     */

    // w.scroll and w.scrollTo
    w.scroll = w.scrollTo = function () {
      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0])) {
        original.scroll.call(w, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);
        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(w, d.body, ~~arguments[0].left, ~~arguments[0].top);
    };

    // w.scrollBy
    w.scrollBy = function () {
      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0])) {
        original.scrollBy.call(w, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);
        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(w, d.body, ~~arguments[0].left + (w.scrollX || w.pageXOffset), ~~arguments[0].top + (w.scrollY || w.pageYOffset));
    };

    // Element.prototype.scroll and Element.prototype.scrollTo
    Element.prototype.scroll = Element.prototype.scrollTo = function () {
      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0])) {
        original.elScroll.call(this, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);
        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(this, this, arguments[0].left, arguments[0].top);
    };

    // Element.prototype.scrollBy
    Element.prototype.scrollBy = function () {
      var arg0 = arguments[0];

      if ((typeof arg0 === 'undefined' ? 'undefined' : _typeof(arg0)) === 'object') {
        this.scroll({
          left: arg0.left + this.scrollLeft,
          top: arg0.top + this.scrollTop,
          behavior: arg0.behavior
        });
      } else {
        this.scroll(this.scrollLeft + arg0, this.scrollTop + arguments[1]);
      }
    };

    // Element.prototype.scrollIntoView
    Element.prototype.scrollIntoView = function () {
      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0])) {
        original.scrollIntoView.call(this, arguments[0] || true);
        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      var scrollableParent = findScrollableParent(this);
      var parentRects = scrollableParent.getBoundingClientRect();
      var clientRects = this.getBoundingClientRect();

      if (scrollableParent !== d.body) {
        // reveal element inside parent
        smoothScroll.call(this, scrollableParent, scrollableParent.scrollLeft + clientRects.left - parentRects.left, scrollableParent.scrollTop + clientRects.top - parentRects.top);
        // reveal parent in viewport
        w.scrollBy({
          left: parentRects.left,
          top: parentRects.top,
          behavior: 'smooth'
        });
      } else {
        // reveal element in viewport
        w.scrollBy({
          left: clientRects.left,
          top: clientRects.top,
          behavior: 'smooth'
        });
      }
    };
  }

  if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {
    // commonjs
    module.exports = { polyfill: polyfill };
  } else {
    // global
    polyfill();
  }
})(window, document);
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (window, factory) {
	var lazySizes = factory(window, window.document);
	window.lazySizes = lazySizes;
	if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {
		module.exports = lazySizes;
	}
})(window, function l(window, document) {
	'use strict';
	/*jshint eqnull:true */

	if (!document.getElementsByClassName) {
		return;
	}

	var lazySizesConfig;

	var docElem = document.documentElement;

	var Date = window.Date;

	var supportPicture = window.HTMLPictureElement;

	var _addEventListener = 'addEventListener';

	var _getAttribute = 'getAttribute';

	var addEventListener = window[_addEventListener];

	var setTimeout = window.setTimeout;

	var requestAnimationFrame = window.requestAnimationFrame || setTimeout;

	var requestIdleCallback = window.requestIdleCallback;

	var regPicture = /^picture$/i;

	var loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];

	var regClassCache = {};

	var forEach = Array.prototype.forEach;

	var hasClass = function hasClass(ele, cls) {
		if (!regClassCache[cls]) {
			regClassCache[cls] = new RegExp('(\\s|^)' + cls + '(\\s|$)');
		}
		return regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];
	};

	var addClass = function addClass(ele, cls) {
		if (!hasClass(ele, cls)) {
			ele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);
		}
	};

	var removeClass = function removeClass(ele, cls) {
		var reg;
		if (reg = hasClass(ele, cls)) {
			ele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));
		}
	};

	var addRemoveLoadEvents = function addRemoveLoadEvents(dom, fn, add) {
		var action = add ? _addEventListener : 'removeEventListener';
		if (add) {
			addRemoveLoadEvents(dom, fn);
		}
		loadEvents.forEach(function (evt) {
			dom[action](evt, fn);
		});
	};

	var triggerEvent = function triggerEvent(elem, name, detail, noBubbles, noCancelable) {
		var event = document.createEvent('CustomEvent');

		event.initCustomEvent(name, !noBubbles, !noCancelable, detail || {});

		elem.dispatchEvent(event);
		return event;
	};

	var updatePolyfill = function updatePolyfill(el, full) {
		var polyfill;
		if (!supportPicture && (polyfill = window.picturefill || lazySizesConfig.pf)) {
			polyfill({ reevaluate: true, elements: [el] });
		} else if (full && full.src) {
			el.src = full.src;
		}
	};

	var getCSS = function getCSS(elem, style) {
		return (getComputedStyle(elem, null) || {})[style];
	};

	var getWidth = function getWidth(elem, parent, width) {
		width = width || elem.offsetWidth;

		while (width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth) {
			width = parent.offsetWidth;
			parent = parent.parentNode;
		}

		return width;
	};

	var rAF = function () {
		var running, waiting;
		var firstFns = [];
		var secondFns = [];
		var fns = firstFns;

		var run = function run() {
			var runFns = fns;

			fns = firstFns.length ? secondFns : firstFns;

			running = true;
			waiting = false;

			while (runFns.length) {
				runFns.shift()();
			}

			running = false;
		};

		var rafBatch = function rafBatch(fn, queue) {
			if (running && !queue) {
				fn.apply(this, arguments);
			} else {
				fns.push(fn);

				if (!waiting) {
					waiting = true;
					(document.hidden ? setTimeout : requestAnimationFrame)(run);
				}
			}
		};

		rafBatch._lsFlush = run;

		return rafBatch;
	}();

	var rAFIt = function rAFIt(fn, simple) {
		return simple ? function () {
			rAF(fn);
		} : function () {
			var that = this;
			var args = arguments;
			rAF(function () {
				fn.apply(that, args);
			});
		};
	};

	var throttle = function throttle(fn) {
		var running;
		var lastTime = 0;
		var gDelay = 125;
		var RIC_DEFAULT_TIMEOUT = 666;
		var rICTimeout = RIC_DEFAULT_TIMEOUT;
		var run = function run() {
			running = false;
			lastTime = Date.now();
			fn();
		};
		var idleCallback = requestIdleCallback ? function () {
			requestIdleCallback(run, { timeout: rICTimeout });
			if (rICTimeout !== RIC_DEFAULT_TIMEOUT) {
				rICTimeout = RIC_DEFAULT_TIMEOUT;
			}
		} : rAFIt(function () {
			setTimeout(run);
		}, true);

		return function (isPriority) {
			var delay;
			if (isPriority = isPriority === true) {
				rICTimeout = 44;
			}

			if (running) {
				return;
			}

			running = true;

			delay = gDelay - (Date.now() - lastTime);

			if (delay < 0) {
				delay = 0;
			}

			if (isPriority || delay < 9 && requestIdleCallback) {
				idleCallback();
			} else {
				setTimeout(idleCallback, delay);
			}
		};
	};

	//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html
	var debounce = function debounce(func) {
		var timeout, timestamp;
		var wait = 99;
		var run = function run() {
			timeout = null;
			func();
		};
		var later = function later() {
			var last = Date.now() - timestamp;

			if (last < wait) {
				setTimeout(later, wait - last);
			} else {
				(requestIdleCallback || run)(run);
			}
		};

		return function () {
			timestamp = Date.now();

			if (!timeout) {
				timeout = setTimeout(later, wait);
			}
		};
	};

	var loader = function () {
		var lazyloadElems, preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;

		var eLvW, elvH, eLtop, eLleft, eLright, eLbottom;

		var defaultExpand, preloadExpand, hFac;

		var regImg = /^img$/i;
		var regIframe = /^iframe$/i;

		var supportScroll = 'onscroll' in window && !/glebot/.test(navigator.userAgent);

		var shrinkExpand = 0;
		var currentExpand = 0;

		var isLoading = 0;
		var lowRuns = -1;

		var resetPreloading = function resetPreloading(e) {
			isLoading--;
			if (e && e.target) {
				addRemoveLoadEvents(e.target, resetPreloading);
			}

			if (!e || isLoading < 0 || !e.target) {
				isLoading = 0;
			}
		};

		var isNestedVisible = function isNestedVisible(elem, elemExpand) {
			var outerRect;
			var parent = elem;
			var visible = getCSS(document.body, 'visibility') == 'hidden' || getCSS(elem, 'visibility') != 'hidden';

			eLtop -= elemExpand;
			eLbottom += elemExpand;
			eLleft -= elemExpand;
			eLright += elemExpand;

			while (visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem) {
				visible = (getCSS(parent, 'opacity') || 1) > 0;

				if (visible && getCSS(parent, 'overflow') != 'visible') {
					outerRect = parent.getBoundingClientRect();
					visible = eLright > outerRect.left && eLleft < outerRect.right && eLbottom > outerRect.top - 1 && eLtop < outerRect.bottom + 1;
				}
			}

			return visible;
		};

		var checkElements = function checkElements() {
			var eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;

			if ((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)) {

				i = 0;

				lowRuns++;

				if (preloadExpand == null) {
					if (!('expand' in lazySizesConfig)) {
						lazySizesConfig.expand = docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370;
					}

					defaultExpand = lazySizesConfig.expand;
					preloadExpand = defaultExpand * lazySizesConfig.expFactor;
				}

				if (currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden) {
					currentExpand = preloadExpand;
					lowRuns = 0;
				} else if (loadMode > 1 && lowRuns > 1 && isLoading < 6) {
					currentExpand = defaultExpand;
				} else {
					currentExpand = shrinkExpand;
				}

				for (; i < eLlen; i++) {

					if (!lazyloadElems[i] || lazyloadElems[i]._lazyRace) {
						continue;
					}

					if (!supportScroll) {
						unveilElement(lazyloadElems[i]);continue;
					}

					if (!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)) {
						elemExpand = currentExpand;
					}

					if (beforeExpandVal !== elemExpand) {
						eLvW = innerWidth + elemExpand * hFac;
						elvH = innerHeight + elemExpand;
						elemNegativeExpand = elemExpand * -1;
						beforeExpandVal = elemExpand;
					}

					rect = lazyloadElems[i].getBoundingClientRect();

					if ((eLbottom = rect.bottom) >= elemNegativeExpand && (eLtop = rect.top) <= elvH && (eLright = rect.right) >= elemNegativeExpand * hFac && (eLleft = rect.left) <= eLvW && (eLbottom || eLright || eLleft || eLtop) && (isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4) || isNestedVisible(lazyloadElems[i], elemExpand))) {
						unveilElement(lazyloadElems[i]);
						loadedSomething = true;
						if (isLoading > 9) {
							break;
						}
					} else if (!loadedSomething && isCompleted && !autoLoadElem && isLoading < 4 && lowRuns < 4 && loadMode > 2 && (preloadElems[0] || lazySizesConfig.preloadAfterLoad) && (preloadElems[0] || !elemExpandVal && (eLbottom || eLright || eLleft || eLtop || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != 'auto'))) {
						autoLoadElem = preloadElems[0] || lazyloadElems[i];
					}
				}

				if (autoLoadElem && !loadedSomething) {
					unveilElement(autoLoadElem);
				}
			}
		};

		var throttledCheckElements = throttle(checkElements);

		var switchLoadingClass = function switchLoadingClass(e) {
			addClass(e.target, lazySizesConfig.loadedClass);
			removeClass(e.target, lazySizesConfig.loadingClass);
			addRemoveLoadEvents(e.target, rafSwitchLoadingClass);
		};
		var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);
		var rafSwitchLoadingClass = function rafSwitchLoadingClass(e) {
			rafedSwitchLoadingClass({ target: e.target });
		};

		var changeIframeSrc = function changeIframeSrc(elem, src) {
			try {
				elem.contentWindow.location.replace(src);
			} catch (e) {
				elem.src = src;
			}
		};

		var handleSources = function handleSources(source) {
			var customMedia, parent;

			var sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);

			if (customMedia = lazySizesConfig.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) {
				source.setAttribute('media', customMedia);
			}

			if (sourceSrcset) {
				source.setAttribute('srcset', sourceSrcset);
			}

			//https://bugzilla.mozilla.org/show_bug.cgi?id=1170572
			if (customMedia) {
				parent = source.parentNode;
				parent.insertBefore(source.cloneNode(), source);
				parent.removeChild(source);
			}
		};

		var lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg) {
			var src, srcset, parent, isPicture, event, firesLoad;

			if (!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented) {

				if (sizes) {
					if (isAuto) {
						addClass(elem, lazySizesConfig.autosizesClass);
					} else {
						elem.setAttribute('sizes', sizes);
					}
				}

				srcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);
				src = elem[_getAttribute](lazySizesConfig.srcAttr);

				if (isImg) {
					parent = elem.parentNode;
					isPicture = parent && regPicture.test(parent.nodeName || '');
				}

				firesLoad = detail.firesLoad || 'src' in elem && (srcset || src || isPicture);

				event = { target: elem };

				if (firesLoad) {
					addRemoveLoadEvents(elem, resetPreloading, true);
					clearTimeout(resetPreloadingTimer);
					resetPreloadingTimer = setTimeout(resetPreloading, 2500);

					addClass(elem, lazySizesConfig.loadingClass);
					addRemoveLoadEvents(elem, rafSwitchLoadingClass, true);
				}

				if (isPicture) {
					forEach.call(parent.getElementsByTagName('source'), handleSources);
				}

				if (srcset) {
					elem.setAttribute('srcset', srcset);
				} else if (src && !isPicture) {
					if (regIframe.test(elem.nodeName)) {
						changeIframeSrc(elem, src);
					} else {
						elem.src = src;
					}
				}

				if (srcset || isPicture) {
					updatePolyfill(elem, { src: src });
				}
			}

			if (elem._lazyRace) {
				delete elem._lazyRace;
			}
			removeClass(elem, lazySizesConfig.lazyClass);

			rAF(function () {
				if (!firesLoad || elem.complete && elem.naturalWidth > 1) {
					if (firesLoad) {
						resetPreloading(event);
					} else {
						isLoading--;
					}
					switchLoadingClass(event);
				}
			}, true);
		});

		var unveilElement = function unveilElement(elem) {
			var detail;

			var isImg = regImg.test(elem.nodeName);

			//allow using sizes="auto", but don't use. it's invalid. Use data-sizes="auto" or a valid value for sizes instead (i.e.: sizes="80vw")
			var sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute]('sizes'));
			var isAuto = sizes == 'auto';

			if ((isAuto || !isCompleted) && isImg && (elem.src || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass)) {
				return;
			}

			detail = triggerEvent(elem, 'lazyunveilread').detail;

			if (isAuto) {
				autoSizer.updateElem(elem, true, elem.offsetWidth);
			}

			elem._lazyRace = true;
			isLoading++;

			lazyUnveil(elem, detail, isAuto, sizes, isImg);
		};

		var onload = function onload() {
			if (isCompleted) {
				return;
			}
			if (Date.now() - started < 999) {
				setTimeout(onload, 999);
				return;
			}
			var afterScroll = debounce(function () {
				lazySizesConfig.loadMode = 3;
				throttledCheckElements();
			});

			isCompleted = true;

			lazySizesConfig.loadMode = 3;

			throttledCheckElements();

			addEventListener('scroll', function () {
				if (lazySizesConfig.loadMode == 3) {
					lazySizesConfig.loadMode = 2;
				}
				afterScroll();
			}, true);
		};

		return {
			_: function _() {
				started = Date.now();

				lazyloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass);
				preloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + ' ' + lazySizesConfig.preloadClass);
				hFac = lazySizesConfig.hFac;

				addEventListener('scroll', throttledCheckElements, true);

				addEventListener('resize', throttledCheckElements, true);

				if (window.MutationObserver) {
					new MutationObserver(throttledCheckElements).observe(docElem, { childList: true, subtree: true, attributes: true });
				} else {
					docElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);
					docElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);
					setInterval(throttledCheckElements, 999);
				}

				addEventListener('hashchange', throttledCheckElements, true);

				//, 'fullscreenchange'
				['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend', 'webkitAnimationEnd'].forEach(function (name) {
					document[_addEventListener](name, throttledCheckElements, true);
				});

				if (/d$|^c/.test(document.readyState)) {
					onload();
				} else {
					addEventListener('load', onload);
					document[_addEventListener]('DOMContentLoaded', throttledCheckElements);
					setTimeout(onload, 20000);
				}

				if (lazyloadElems.length) {
					checkElements();
					rAF._lsFlush();
				} else {
					throttledCheckElements();
				}
			},
			checkElems: throttledCheckElements,
			unveil: unveilElement
		};
	}();

	var autoSizer = function () {
		var autosizesElems;

		var sizeElement = rAFIt(function (elem, parent, event, width) {
			var sources, i, len;
			elem._lazysizesWidth = width;
			width += 'px';

			elem.setAttribute('sizes', width);

			if (regPicture.test(parent.nodeName || '')) {
				sources = parent.getElementsByTagName('source');
				for (i = 0, len = sources.length; i < len; i++) {
					sources[i].setAttribute('sizes', width);
				}
			}

			if (!event.detail.dataAttr) {
				updatePolyfill(elem, event.detail);
			}
		});
		var getSizeElement = function getSizeElement(elem, dataAttr, width) {
			var event;
			var parent = elem.parentNode;

			if (parent) {
				width = getWidth(elem, parent, width);
				event = triggerEvent(elem, 'lazybeforesizes', { width: width, dataAttr: !!dataAttr });

				if (!event.defaultPrevented) {
					width = event.detail.width;

					if (width && width !== elem._lazysizesWidth) {
						sizeElement(elem, parent, event, width);
					}
				}
			}
		};

		var updateElementsSizes = function updateElementsSizes() {
			var i;
			var len = autosizesElems.length;
			if (len) {
				i = 0;

				for (; i < len; i++) {
					getSizeElement(autosizesElems[i]);
				}
			}
		};

		var debouncedUpdateElementsSizes = debounce(updateElementsSizes);

		return {
			_: function _() {
				autosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);
				addEventListener('resize', debouncedUpdateElementsSizes);
			},
			checkElems: debouncedUpdateElementsSizes,
			updateElem: getSizeElement
		};
	}();

	var init = function init() {
		if (!init.i) {
			init.i = true;
			autoSizer._();
			loader._();
		}
	};

	(function () {
		var prop;

		var lazySizesDefaults = {
			lazyClass: 'lazyload',
			loadedClass: 'lazyloaded',
			loadingClass: 'lazyloading',
			preloadClass: 'lazypreload',
			errorClass: 'lazyerror',
			//strictClass: 'lazystrict',
			autosizesClass: 'lazyautosizes',
			srcAttr: 'data-src',
			srcsetAttr: 'data-srcset',
			sizesAttr: 'data-sizes',
			//preloadAfterLoad: false,
			minSize: 40,
			customMedia: {},
			init: true,
			expFactor: 1.5,
			hFac: 0.8,
			loadMode: 2
		};

		lazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};

		for (prop in lazySizesDefaults) {
			if (!(prop in lazySizesConfig)) {
				lazySizesConfig[prop] = lazySizesDefaults[prop];
			}
		}

		window.lazySizesConfig = lazySizesConfig;

		setTimeout(function () {
			if (lazySizesConfig.init) {
				init();
			}
		});
	})();

	return {
		cfg: lazySizesConfig,
		autoSizer: autoSizer,
		loader: loader,
		init: init,
		uP: updatePolyfill,
		aC: addClass,
		rC: removeClass,
		hC: hasClass,
		fire: triggerEvent,
		gW: getWidth,
		rAF: rAF
	};
});
'use strict';

(function () {
  lightGallery(document.getElementById('ul-li'), {
    download: false
  });

  window.addEventListener('load', function () {
    if (document.querySelector('.no-logo a[href*="#my-projects"]')) {
      var myProjectsLink = document.querySelector('.no-logo a[href*="#my-projects"]');
      var projectSection = document.getElementById('my-projects');

      myProjectsLink.addEventListener('click', function (e) {
        e.preventDefault();
        projectSection.scrollIntoView({ behavior: 'smooth' });
      });
    }
  });
})();